"""add category to lost items

Revision ID: ac86def25363
Revises: 789953bf9c87
Create Date: 2025-03-11 21:13:17.614796

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'ac86def25363'
down_revision: Union[str, None] = '789953bf9c87'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('categories',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_categories_id'), 'categories', ['id'], unique=False)
    op.create_index(op.f('ix_categories_name'), 'categories', ['name'], unique=True)
    op.alter_column('found_items', 'description',
               existing_type=sa.TEXT(),
               nullable=False)

    # Добавляем новую колонку с nullable=True
    op.add_column('lost_items', sa.Column('category_id', sa.Integer(), nullable=True))

    # Вставляем категорию по умолчанию
    op.execute('INSERT INTO categories (name, description) VALUES (\'Default Category\', \'This is a default category\')')

    # Получаем id вставленной категории
    connection = op.get_bind()
    result = connection.execute(sa.text('SELECT id FROM categories WHERE name = :name'), {'name': 'Default Category'})
    default_category_id = result.scalar()

    # Устанавливаем значение по умолчанию для существующих записей
    op.execute(f'UPDATE lost_items SET category_id = {default_category_id} WHERE category_id IS NULL')

    # Изменяем колонку на nullable=False
    op.alter_column('lost_items', 'category_id', existing_type=sa.Integer(), nullable=False)

    op.alter_column('lost_items', 'description',
               existing_type=sa.TEXT(),
               nullable=False)
    op.create_foreign_key(None, 'lost_items', 'categories', ['category_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'lost_items', type_='foreignkey')
    op.alter_column('lost_items', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_column('lost_items', 'category_id')
    op.alter_column('found_items', 'description',
               existing_type=sa.TEXT(),
               nullable=True)
    op.drop_index(op.f('ix_categories_name'), table_name='categories')
    op.drop_index(op.f('ix_categories_id'), table_name='categories')
    op.drop_table('categories')
    # ### end Alembic commands ###
