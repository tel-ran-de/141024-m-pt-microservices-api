"""add category to found items

Revision ID: c5c367980cbe
Revises: ac86def25363
Create Date: 2025-03-11 21:37:38.448825

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'c5c367980cbe'
down_revision: Union[str, None] = 'ac86def25363'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # Добавляем новую колонку с nullable=True
    op.add_column('found_items', sa.Column('category_id', sa.Integer(), nullable=True))

    # Вставляем категорию по умолчанию, если её ещё нет
    connection = op.get_bind()
    result = connection.execute(sa.text('SELECT id FROM categories WHERE name = :name'), {'name': 'Default Category'})
    default_category_id = result.scalar()

    if default_category_id is None:
        op.execute('INSERT INTO categories (name, description) VALUES (\'Default Category\', \'This is a default category\')')
        result = connection.execute(sa.text('SELECT id FROM categories WHERE name = :name'), {'name': 'Default Category'})
        default_category_id = result.scalar()

    # Устанавливаем значение по умолчанию для существующих записей
    op.execute(f'UPDATE found_items SET category_id = {default_category_id} WHERE category_id IS NULL')

    # Изменяем колонку на nullable=False
    op.alter_column('found_items', 'category_id', existing_type=sa.Integer(), nullable=False)

    # Создаем внешний ключ
    op.create_foreign_key(None, 'found_items', 'categories', ['category_id'], ['id'])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'found_items', type_='foreignkey')
    op.drop_column('found_items', 'category_id')
    # ### end Alembic commands ###
